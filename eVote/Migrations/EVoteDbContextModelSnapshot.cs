// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eVote.src.Repository;

#nullable disable

namespace eVote.Migrations
{
    [DbContext(typeof(EVoteDbContext))]
    partial class EVoteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("eVote.src.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCandidate")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("VoteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VoteId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eVote.src.Models.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VoterId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("eVote.src.Models.User", b =>
                {
                    b.HasOne("eVote.src.Models.Vote", "Vote")
                        .WithMany()
                        .HasForeignKey("VoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vote");
                });

            modelBuilder.Entity("eVote.src.Models.Vote", b =>
                {
                    b.HasOne("eVote.src.Models.User", null)
                        .WithMany("VotesReceived")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("eVote.src.Models.User", b =>
                {
                    b.Navigation("VotesReceived");
                });
#pragma warning restore 612, 618
        }
    }
}
